<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard1.3</TargetFramework>

    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
    <NoWarn>1701;1702;1705;1591</NoWarn>

    <PackageId>Xamarin.Build.AsyncTask</PackageId>
    <PackageVersion>0.1.0</PackageVersion>

    <Title>$(PackageId)</Title>
    <Description>$(PackageId)</Description>
    <Summary>Supports MSBuild 14+.</Summary>
    <Authors>Microsoft</Authors>
    <Owners>microsoft xamarin</Owners>
    <PackageReleaseNotes>$([System.IO.File]::ReadAllText('$(MSBuildThisFileDirectory)Readme.txt'))</PackageReleaseNotes>
    <PackageProjectUrl>https://github.com/xamarin/Xamarin.Build.AsyncTask</PackageProjectUrl>
    <PackageLicenseUrl>https://raw.githubusercontent.com/xamarin/Xamarin.Build.AsyncTask/master/LICENSE</PackageLicenseUrl>
    <Copyright>© Microsoft Corporation. All rights reserved.</Copyright>

    <PackOnBuild>true</PackOnBuild>
    <InferPackageContents>false</InferPackageContents>
    <GenerateNuspecDependsOn>SetVersions;$(GenerateNuspecDependsOn)</GenerateNuspecDependsOn>
    <GetPackageVersionDependsOn>SetVersions;$(GetPackageVersionDependsOn)</GetPackageVersionDependsOn>

    <GitBranch Condition="'$(SYSTEM_PULLREQUEST_TARGETBRANCH)' != ''">$(SYSTEM_PULLREQUEST_TARGETBRANCH)</GitBranch>
    <GitBranch Condition="'$(SYSTEM_PULLREQUEST_TARGETBRANCH)' == '' and '$(BUILD_SOURCEBRANCHNAME)' != ''">$(BUILD_SOURCEBRANCHNAME)</GitBranch>
  </PropertyGroup>

  <PropertyGroup Condition="'$(CI)' == ''">
    <CI>false</CI>
    <CI Condition="'$(TF_BUILD)' == 'true'">true</CI>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Tasks.Core" Version="15.6.82" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="15.6.82" />

    <PackageReference Include="MSBuilder.ThisAssembly.Metadata" Version="0.1.4" PrivateAssets="all" />
    <PackageReference Include="System.Diagnostics.StackTrace" Version="4.3.0" PrivateAssets="all" />
    <PackageReference Include="NuGet.Build.Packaging" Version="*" PrivateAssets="all" />
    <PackageReference Include="GitInfo" Version="*" PrivateAssets="all" />
    <PackageReference Include="SourceLink.Create.GitHub" Version="*" PrivateAssets="all" />
    <DotNetCliToolReference Include="dotnet-sourcelink-git" Version="*" />
  </ItemGroup>

  <ItemGroup>
    <PackageFile Include="Xamarin.Build.AsyncTask.props" Kind="build" />
    <PackageFile Include="$(OutputPath)$(AssemblyName).dll" Kind="lib" />
    <PackageFile Include="$(OutputPath)$(AssemblyName).pdb" Kind="lib" />
    <PackageFile Include="$(OutputPath)$(AssemblyName).xml" Kind="lib" />
    <PackageFile Include="Readme.txt" />
    <PackageFile Include="Microsoft.Build.Tasks.Core;Microsoft.Build.Utilities.Core" Version="14.3.0" Kind="Dependency" Visible="false" />
  </ItemGroup>

  <Target Name="Version" DependsOnTargets="SetVersions;GetAssemblyVersion" AfterTargets="SetVersions">
    <Message Importance="high" Text="PackageVersion=$(PackageVersion)
AssemblyVersion=$(AssemblyVersion)" />
    <Message Condition="$(CI)" Importance="high" Text="##vso[build.updatebuildnumber]$(BuildVersion)"/>
  </Target>

  <Target Name="SetVersions"
          BeforeTargets="PrepareForBuild;GetAssemblyVersion;GetPackageVersion;Pack"
          DependsOnTargets="GitVersion"
          Returns="$(Version)"
          Condition="'$(GitInfoImported)' == 'true' And '$(ExcludeRestorePackageImports)' != 'true'">

    <PropertyGroup>
      <!-- We don't build stable versions from non-master branches. When the version came from the branch, we leave it as-is. -->
      <GitSemVerDashLabel Condition="'$(GitBranch)' != 'master' and '$(GitSemVerDashLabel)' == '' and '$(GitSemVerSource)' != 'Branch'">-$(GitBranch)</GitSemVerDashLabel>
    </PropertyGroup>

    <ItemGroup>
      <VersionMetadata Include="$(GitCommits)" Condition="'$(GitSemVerDashLabel)' == '' and '$(GitCommits)' != '0'" />

      <!-- Branch metadata always present for non-master branches, unless the existing label matches the branch.
           For a versioned branch, it doesn't make sense either. -->
      <VersionMetadata Include="$(GitBranch)" Condition="'$(GitBranch)' != 'master' and '$(GitSemVerSource)' != 'Branch' and '$(GitSemVerDashLabel)' != '-$(GitBranch)'" />

      <VersionMetadata Condition="$(CI) and '$(BUILD_REASON)' == 'PullRequest'"
                       Include="pr.$(SYSTEM_PULLREQUEST_PULLREQUESTNUMBER)"/>
      <VersionMetadata Include="sha.$(GitCommit)" Condition="'$(GitCommit)' != ''"/>
      <VersionMetadata Condition="$(CI)"
                       Include="build.$(BUILD_BUILDID)"/>
    </ItemGroup>

    <PropertyGroup>
      <VersionMetadataLabel>@(VersionMetadata -> '%(Identity)', '-')</VersionMetadataLabel>
      <VersionMetadataPlusLabel Condition="'$(VersionMetadataLabel)' != ''">+$(VersionMetadataLabel)</VersionMetadataPlusLabel>
      <GitSemVerDashLabel Condition="'$(GitSemVerDashLabel)' != '' and '$(GitCommits)' != '0'">$(GitSemVerDashLabel).$(GitCommits)</GitSemVerDashLabel>

      <BuildVersion>$(GitBaseVersionMajor).$(GitBaseVersionMinor).$(GitBaseVersionPatch)$(GitSemVerDashLabel)$(VersionMetadataPlusLabel)</BuildVersion>

      <!-- Stable versions should have clean version numbers with no metadata -->
      <PackageVersion Condition="'$(GitSemVerDashLabel)' == ''">$(GitBaseVersionMajor).$(GitBaseVersionMinor).$(GitBaseVersionPatch)</PackageVersion>
      <PackageVersion Condition="'$(GitSemVerDashLabel)' != ''">$(GitBaseVersionMajor).$(GitBaseVersionMinor).$(GitBaseVersionPatch)$(GitSemVerDashLabel)$(VersionMetadataPlusLabel)</PackageVersion>
      <Version>$(BuildVersion)</Version>
    </PropertyGroup>

    <ItemGroup>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadata">
        <_Parameter1>Version</_Parameter1>
        <_Parameter2>$(Version)</_Parameter2>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadata">
        <_Parameter1>PackageVersion</_Parameter1>
        <_Parameter2>$(PackageVersion)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>

  </Target>

  <Target Name="AddVersionMetadata" DependsOnTargets="GetAssemblyVersion" BeforeTargets="GenerateThisAssemblyMetadata">
    <ItemGroup>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadata">
        <_Parameter1>AssemblyVersion</_Parameter1>
        <_Parameter2>$(AssemblyVersion)</_Parameter2>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadata">
        <_Parameter1>FileVersion</_Parameter1>
        <_Parameter2>$(FileVersion)</_Parameter2>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadata">
        <_Parameter1>InformationalVersion</_Parameter1>
        <_Parameter2>$(InformationalVersion)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>

  <Import Project="Test.targets" />

</Project>